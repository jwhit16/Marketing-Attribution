/* Find June’s rows in the table! Select all columns from the page_visits table, using a WHERE clause */

 SELECT *
 FROM page_visits
 WHERE user_id = 10069 AND utm_source = 'buzzfeed';
 
 
 /* Find all of of June’s rows, using a WHERE clause with just user_id. */
 
 SELECT *
 FROM page_visits
 WHERE user_id = 10069;
 
 
 /* Select all columns from the page_visits table, using a WHERE clause with user_id = 10329. */
 
 SELECT *
 FROM page_visits
 WHERE user_id = 10329;
 

/* Find all last touches. Your query will look similar to the first_touch query above. */

SELECT user_id,
   MAX(timestamp) AS 'last_touch_at'
FROM page_visits
GROUP BY user_id;



/* Add a WHERE clause for user_id = 10069 to your existing query. */

SELECT user_id,
    MAX(timestamp) AS 'last_touch_at'
FROM page_visits
WHERE user_id = 10069
GROUP BY user_id;


/* Using the query above as a guide, write the LAST-touch attribution query and run it. */

WITH last_touch AS (
    SELECT user_id,
       MAX(timestamp) AS 'last_touch_at'
    FROM page_visits
    GROUP BY user_id)
SELECT lt.user_id,
   lt.last_touch_at,
   pv.utm_source
FROM last_touch AS 'lt'
JOIN page_visits AS 'pv'
   ON lt.user_id = pv.user_id
   AND lt.last_touch_at = pv.timestamp;
   
   
   /* Add a WHERE clause for user_id = 10069 to your existing query. */
   
WITH last_touch AS (
    SELECT user_id,
       MAX(timestamp) AS 'last_touch_at'
    FROM page_visits
    GROUP BY user_id)
SELECT lt.user_id,
   lt.last_touch_at,
   pv.utm_source
FROM last_touch AS 'lt'
JOIN page_visits AS 'pv'
   ON lt.user_id = pv.user_id
   AND lt.last_touch_at = pv.timestamp
WHERE lt.user_id = 10069;
